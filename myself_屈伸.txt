#pragma strict

static var my_speed				= 1;
static var my_updown_mergin		= 0.05;
//static var gravity_accel		= -9.80665; // TODO: 動作テスト用の仮値なので宇宙空間やエミュでは動かない。値を初期化する処理が必要。
static var gravity_accel		= Input.acceleration.y;	// TODO: この表記はいまいち正確ではない。数秒間計測し、その平均にするべきだ。
static var my_updown_time		= 0;
static var my_life				= 5;

function Update ()
{
	ProgressBar(Rect(3, 45, 100, 20), my_life/5.0, "Life");
	
	// 前進
	transform.Translate(0, 0, my_speed);	
	
	// 加速度センサ
	var my_accel_y = Input.acceleration.y - gravity_accel;
	
	if (my_updown_time > 0)	// しゃがんでる
	{
		--my_updown_time;
		if (my_updown_time == 0)
		{
			transform.localPosition = Vector3(transform.localPosition.x, transform.localPosition.y + 2, transform.localPosition.z);
		}
	}
	else					// 立ってる
	{
		if (my_accel_y < -my_updown_mergin)	// しゃがもうとしている
		{
			// しゃがむ
			my_updown_time = 60;
			transform.localPosition = Vector3(transform.localPosition.x, transform.localPosition.y - 2, transform.localPosition.z);
		}
	}
	
	// ====================================================================================================
	// ゲームクリア判定。
	// プレイヤーがz座標において2000まで進んだらクリアとする。
	// todo: 見えないオブジェクトにぶつかったらクリアの方が後々便利なのだが・・・
	if (transform.position.z > 2000)
	{
		// ゲームクリア
		Application.LoadLevel("goal");
	}
}

function OnTriggerEnter (collider : Collider)	//	当たったら
{
	// 体力の減少
	--my_life;
	
	// TODO: ifでゲームオーバーに遷移
	
	// 当たり判定の削除
	collider.isTrigger = false;
}
